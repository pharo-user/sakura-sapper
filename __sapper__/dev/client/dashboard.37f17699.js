import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, a as validate_slots, f as element, t as text, e as space, j as claim_element, k as children, l as claim_text, g as detach_dev, h as claim_space, n as attr_dev, m as add_location, o as insert_dev, p as append_dev, u as noop, v as validate_store, c as component_subscribe, b as shop, w as create_component, q as query_selector_all, x as claim_component, y as mount_component, z as transition_in, A as transition_out, B as destroy_component } from './client.32e8e64b.js';

/* src/components/Statistics.svelte generated by Svelte v3.38.3 */

const file$1 = "src/components/Statistics.svelte";

function create_fragment$1(ctx) {
	let table;
	let tr0;
	let th0;
	let t0;
	let t1;
	let td0;
	let t2;
	let t3;
	let tr1;
	let th1;
	let t4;
	let t5;
	let td1;
	let t6;
	let t7;
	let tr2;
	let th2;
	let t8;
	let t9;
	let td2;
	let t10;
	let t11;
	let tr3;
	let th3;
	let t12;
	let t13;
	let td3;
	let t14;

	const block = {
		c: function create() {
			table = element("table");
			tr0 = element("tr");
			th0 = element("th");
			t0 = text("VIEWS");
			t1 = space();
			td0 = element("td");
			t2 = text("0");
			t3 = space();
			tr1 = element("tr");
			th1 = element("th");
			t4 = text("CLICKS");
			t5 = space();
			td1 = element("td");
			t6 = text("0");
			t7 = space();
			tr2 = element("tr");
			th2 = element("th");
			t8 = text("REVENUES");
			t9 = space();
			td2 = element("td");
			t10 = text("0");
			t11 = space();
			tr3 = element("tr");
			th3 = element("th");
			t12 = text("ORDERS");
			t13 = space();
			td3 = element("td");
			t14 = text("0");
			this.h();
		},
		l: function claim(nodes) {
			table = claim_element(nodes, "TABLE", { class: true });
			var table_nodes = children(table);
			tr0 = claim_element(table_nodes, "TR", {});
			var tr0_nodes = children(tr0);
			th0 = claim_element(tr0_nodes, "TH", { class: true });
			var th0_nodes = children(th0);
			t0 = claim_text(th0_nodes, "VIEWS");
			th0_nodes.forEach(detach_dev);
			t1 = claim_space(tr0_nodes);
			td0 = claim_element(tr0_nodes, "TD", { class: true });
			var td0_nodes = children(td0);
			t2 = claim_text(td0_nodes, "0");
			td0_nodes.forEach(detach_dev);
			tr0_nodes.forEach(detach_dev);
			t3 = claim_space(table_nodes);
			tr1 = claim_element(table_nodes, "TR", {});
			var tr1_nodes = children(tr1);
			th1 = claim_element(tr1_nodes, "TH", { class: true });
			var th1_nodes = children(th1);
			t4 = claim_text(th1_nodes, "CLICKS");
			th1_nodes.forEach(detach_dev);
			t5 = claim_space(tr1_nodes);
			td1 = claim_element(tr1_nodes, "TD", { class: true });
			var td1_nodes = children(td1);
			t6 = claim_text(td1_nodes, "0");
			td1_nodes.forEach(detach_dev);
			tr1_nodes.forEach(detach_dev);
			t7 = claim_space(table_nodes);
			tr2 = claim_element(table_nodes, "TR", {});
			var tr2_nodes = children(tr2);
			th2 = claim_element(tr2_nodes, "TH", { class: true });
			var th2_nodes = children(th2);
			t8 = claim_text(th2_nodes, "REVENUES");
			th2_nodes.forEach(detach_dev);
			t9 = claim_space(tr2_nodes);
			td2 = claim_element(tr2_nodes, "TD", { class: true });
			var td2_nodes = children(td2);
			t10 = claim_text(td2_nodes, "0");
			td2_nodes.forEach(detach_dev);
			tr2_nodes.forEach(detach_dev);
			t11 = claim_space(table_nodes);
			tr3 = claim_element(table_nodes, "TR", {});
			var tr3_nodes = children(tr3);
			th3 = claim_element(tr3_nodes, "TH", { class: true });
			var th3_nodes = children(th3);
			t12 = claim_text(th3_nodes, "ORDERS");
			th3_nodes.forEach(detach_dev);
			t13 = claim_space(tr3_nodes);
			td3 = claim_element(tr3_nodes, "TD", { class: true });
			var td3_nodes = children(td3);
			t14 = claim_text(td3_nodes, "0");
			td3_nodes.forEach(detach_dev);
			tr3_nodes.forEach(detach_dev);
			table_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(th0, "class", "svelte-1lxwc74");
			add_location(th0, file$1, 17, 4, 200);
			attr_dev(td0, "class", "svelte-1lxwc74");
			add_location(td0, file$1, 18, 4, 219);
			add_location(tr0, file$1, 16, 4, 191);
			attr_dev(th1, "class", "svelte-1lxwc74");
			add_location(th1, file$1, 21, 4, 253);
			attr_dev(td1, "class", "svelte-1lxwc74");
			add_location(td1, file$1, 22, 4, 273);
			add_location(tr1, file$1, 20, 4, 244);
			attr_dev(th2, "class", "svelte-1lxwc74");
			add_location(th2, file$1, 25, 4, 307);
			attr_dev(td2, "class", "svelte-1lxwc74");
			add_location(td2, file$1, 26, 4, 329);
			add_location(tr2, file$1, 24, 4, 298);
			attr_dev(th3, "class", "svelte-1lxwc74");
			add_location(th3, file$1, 29, 4, 363);
			attr_dev(td3, "class", "svelte-1lxwc74");
			add_location(td3, file$1, 30, 4, 383);
			add_location(tr3, file$1, 28, 4, 354);
			attr_dev(table, "class", "svelte-1lxwc74");
			add_location(table, file$1, 15, 0, 179);
		},
		m: function mount(target, anchor) {
			insert_dev(target, table, anchor);
			append_dev(table, tr0);
			append_dev(tr0, th0);
			append_dev(th0, t0);
			append_dev(tr0, t1);
			append_dev(tr0, td0);
			append_dev(td0, t2);
			append_dev(table, t3);
			append_dev(table, tr1);
			append_dev(tr1, th1);
			append_dev(th1, t4);
			append_dev(tr1, t5);
			append_dev(tr1, td1);
			append_dev(td1, t6);
			append_dev(table, t7);
			append_dev(table, tr2);
			append_dev(tr2, th2);
			append_dev(th2, t8);
			append_dev(tr2, t9);
			append_dev(tr2, td2);
			append_dev(td2, t10);
			append_dev(table, t11);
			append_dev(table, tr3);
			append_dev(tr3, th3);
			append_dev(th3, t12);
			append_dev(tr3, t13);
			append_dev(tr3, td3);
			append_dev(td3, t14);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(table);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Statistics", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Statistics> was created with unknown prop '${key}'`);
	});

	return [];
}

class Statistics extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Statistics",
			options,
			id: create_fragment$1.name
		});
	}
}

/* src/routes/dashboard.svelte generated by Svelte v3.38.3 */
const file = "src/routes/dashboard.svelte";

function create_fragment(ctx) {
	let t0;
	let br0;
	let t1;
	let br1;
	let t2;
	let h1;
	let t3;
	let t4;
	let div;
	let h2;
	let t5;
	let t6;
	let statistics;
	let t7;
	let p;
	let t8;
	let a;
	let t9;
	let t10;
	let current;
	statistics = new Statistics({ $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			br0 = element("br");
			t1 = space();
			br1 = element("br");
			t2 = space();
			h1 = element("h1");
			t3 = text("SAKURA NETWORK");
			t4 = space();
			div = element("div");
			h2 = element("h2");
			t5 = text("STATISTICS");
			t6 = space();
			create_component(statistics.$$.fragment);
			t7 = space();
			p = element("p");
			t8 = text("click ");
			a = element("a");
			t9 = text("here");
			t10 = text(" to go back to the shop");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-mc1kyo\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			br0 = claim_element(nodes, "BR", {});
			t1 = claim_space(nodes);
			br1 = claim_element(nodes, "BR", {});
			t2 = claim_space(nodes);
			h1 = claim_element(nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t3 = claim_text(h1_nodes, "SAKURA NETWORK");
			h1_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h2 = claim_element(div_nodes, "H2", {});
			var h2_nodes = children(h2);
			t5 = claim_text(h2_nodes, "STATISTICS");
			h2_nodes.forEach(detach_dev);
			t6 = claim_space(div_nodes);
			claim_component(statistics.$$.fragment, div_nodes);
			t7 = claim_space(div_nodes);
			p = claim_element(div_nodes, "P", {});
			var p_nodes = children(p);
			t8 = claim_text(p_nodes, "click ");
			a = claim_element(p_nodes, "A", { href: true, class: true });
			var a_nodes = children(a);
			t9 = claim_text(a_nodes, "here");
			a_nodes.forEach(detach_dev);
			t10 = claim_text(p_nodes, " to go back to the shop");
			p_nodes.forEach(detach_dev);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "Dashboard";
			add_location(br0, file, 30, 0, 442);
			add_location(br1, file, 31, 0, 449);
			attr_dev(h1, "class", "svelte-tzw6d9");
			add_location(h1, file, 32, 0, 456);
			add_location(h2, file, 34, 4, 490);
			attr_dev(a, "href", /*shop_url*/ ctx[0]);
			attr_dev(a, "class", "svelte-tzw6d9");
			add_location(a, file, 37, 13, 554);
			add_location(p, file, 37, 4, 545);
			attr_dev(div, "class", "svelte-tzw6d9");
			add_location(div, file, 33, 0, 480);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, br0, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, br1, anchor);
			insert_dev(target, t2, anchor);
			insert_dev(target, h1, anchor);
			append_dev(h1, t3);
			insert_dev(target, t4, anchor);
			insert_dev(target, div, anchor);
			append_dev(div, h2);
			append_dev(h2, t5);
			append_dev(div, t6);
			mount_component(statistics, div, null);
			append_dev(div, t7);
			append_dev(div, p);
			append_dev(p, t8);
			append_dev(p, a);
			append_dev(a, t9);
			append_dev(p, t10);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(statistics.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(statistics.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(br0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(br1);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t4);
			if (detaching) detach_dev(div);
			destroy_component(statistics);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let $shop;
	validate_store(shop, "shop");
	component_subscribe($$self, shop, $$value => $$invalidate(1, $shop = $$value));
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Dashboard", slots, []);
	let shop_url = "https://" + $shop;
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Dashboard> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ Statistics, shop, shop_url, $shop });

	$$self.$inject_state = $$props => {
		if ("shop_url" in $$props) $$invalidate(0, shop_url = $$props.shop_url);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [shop_url];
}

class Dashboard extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Dashboard",
			options,
			id: create_fragment.name
		});
	}
}

export default Dashboard;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGFzaGJvYXJkLjM3ZjE3Njk5LmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcm91dGVzL2Rhc2hib2FyZC5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdD5cblx0aW1wb3J0IFN0YXRpc3RpY3MgZnJvbSAnLi4vY29tcG9uZW50cy9TdGF0aXN0aWNzLnN2ZWx0ZSc7XG5cdGltcG9ydCB7IHNob3AgfSBmcm9tICcuLi9jb21wb25lbnRzL3N0b3Jlcy5qcyc7XG5cbiAgICBsZXQgc2hvcF91cmwgPSAnaHR0cHM6Ly8nKyRzaG9wO1xuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cblxuICAgIGEge1xuXHQgICAgY29sb3I6ICM1RDI4Mjg7XG5cblx0fVxuXG4gICAgZGl2IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0Y2RjRGNDtcbiAgICAgICAgcGFkZGluZzogNyU7XG4gICAgfVxuXG5cdGgxIHtcblx0XHRjb2xvcjogYmxhY2s7XG5cdFx0Zm9udC1mYW1pbHk6ICdNb250c2VycmF0Jztcblx0XHRmb250LXdlaWdodDogJ2JvbGQnO1xuXHRcdGZvbnQtc2l6ZTogMmVtO1xuXHR9XG5cbjwvc3R5bGU+XG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5EYXNoYm9hcmQ8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cbjxiciAvPlxuPGJyIC8+XG48aDE+U0FLVVJBIE5FVFdPUks8L2gxPlxuPGRpdj5cbiAgICA8aDI+U1RBVElTVElDUzwvaDI+XG4gICAgPFN0YXRpc3RpY3M+PC9TdGF0aXN0aWNzPlxuXG4gICAgPHA+Y2xpY2sgPGEgaHJlZj17c2hvcF91cmx9PiBoZXJlPC9hPiB0byBnbyBiYWNrIHRvIHRoZSBzaG9wPC9wPlxuPC9kaXY+XG5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztvQ0FxQ3NCLEdBQVE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQWpDdEIsUUFBUSxHQUFHLFVBQVUsR0FBQyxLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
