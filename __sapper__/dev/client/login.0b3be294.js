import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, a as space, e as element, t as text, q as query_selector_all, b as detach_dev, c as claim_space, f as claim_element, g as children, h as claim_text, k as add_location, j as attr_dev, l as insert_dev, m as append_dev, y as set_input_value, z as listen_dev, n as noop, A as run_all } from './client.f36ce427.js';

/* src/routes/login.svelte generated by Svelte v3.38.3 */

const file = "src/routes/login.svelte";

function create_fragment(ctx) {
	let t0;
	let h1;
	let t1;
	let t2;
	let input0;
	let t3;
	let input1;
	let t4;
	let button;
	let t5;
	let mounted;
	let dispose;

	const block = {
		c: function create() {
			t0 = space();
			h1 = element("h1");
			t1 = text("CONNECT TO SAKURA.ECO");
			t2 = space();
			input0 = element("input");
			t3 = space();
			input1 = element("input");
			t4 = space();
			button = element("button");
			t5 = text("Sign In");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1ine71f\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			h1 = claim_element(nodes, "H1", {});
			var h1_nodes = children(h1);
			t1 = claim_text(h1_nodes, "CONNECT TO SAKURA.ECO");
			h1_nodes.forEach(detach_dev);
			t2 = claim_space(nodes);
			input0 = claim_element(nodes, "INPUT", { placeholder: true });
			t3 = claim_space(nodes);
			input1 = claim_element(nodes, "INPUT", { placeholder: true });
			t4 = claim_space(nodes);
			button = claim_element(nodes, "BUTTON", {});
			var button_nodes = children(button);
			t5 = claim_text(button_nodes, "Sign In");
			button_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "About";
			add_location(h1, file, 16, 0, 175);
			attr_dev(input0, "placeholder", "enter your name");
			add_location(input0, file, 17, 0, 206);
			attr_dev(input1, "placeholder", "enter your password");
			add_location(input1, file, 18, 0, 266);
			add_location(button, file, 20, 0, 331);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, h1, anchor);
			append_dev(h1, t1);
			insert_dev(target, t2, anchor);
			insert_dev(target, input0, anchor);
			set_input_value(input0, /*username*/ ctx[0]);
			insert_dev(target, t3, anchor);
			insert_dev(target, input1, anchor);
			set_input_value(input1, /*password*/ ctx[1]);
			insert_dev(target, t4, anchor);
			insert_dev(target, button, anchor);
			append_dev(button, t5);

			if (!mounted) {
				dispose = [
					listen_dev(input0, "input", /*input0_input_handler*/ ctx[2]),
					listen_dev(input1, "input", /*input1_input_handler*/ ctx[3]),
					listen_dev(button, "click", handleClick, { once: true }, false, false)
				];

				mounted = true;
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*username*/ 1 && input0.value !== /*username*/ ctx[0]) {
				set_input_value(input0, /*username*/ ctx[0]);
			}

			if (dirty & /*password*/ 2 && input1.value !== /*password*/ ctx[1]) {
				set_input_value(input1, /*password*/ ctx[1]);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t2);
			if (detaching) detach_dev(input0);
			if (detaching) detach_dev(t3);
			if (detaching) detach_dev(input1);
			if (detaching) detach_dev(t4);
			if (detaching) detach_dev(button);
			mounted = false;
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function handleClick() {
	alert("no more alerts");
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Login", slots, []);
	let username = "";
	let password = "";
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Login> was created with unknown prop '${key}'`);
	});

	function input0_input_handler() {
		username = this.value;
		$$invalidate(0, username);
	}

	function input1_input_handler() {
		password = this.value;
		$$invalidate(1, password);
	}

	$$self.$capture_state = () => ({ username, password, handleClick });

	$$self.$inject_state = $$props => {
		if ("username" in $$props) $$invalidate(0, username = $$props.username);
		if ("password" in $$props) $$invalidate(1, password = $$props.password);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [username, password, input0_input_handler, input1_input_handler];
}

class Login extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Login",
			options,
			id: create_fragment.name
		});
	}
}

export default Login;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4uMGIzYmUyOTQuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvbG9naW4uc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gIFxuICBsZXQgdXNlcm5hbWUgPSAnJztcbiAgbGV0IHBhc3N3b3JkID0gJyc7XG5cblx0ZnVuY3Rpb24gaGFuZGxlQ2xpY2soKSB7XG5cdFx0YWxlcnQoJ25vIG1vcmUgYWxlcnRzJylcblx0fVxuPC9zY3JpcHQ+XG5cblxuXG48c3ZlbHRlOmhlYWQ+XG5cdDx0aXRsZT5BYm91dDwvdGl0bGU+XG48L3N2ZWx0ZTpoZWFkPlxuXG48aDE+Q09OTkVDVCBUTyBTQUtVUkEuRUNPPC9oMT5cbjxpbnB1dCBiaW5kOnZhbHVlPXt1c2VybmFtZX0gcGxhY2Vob2xkZXI9XCJlbnRlciB5b3VyIG5hbWVcIj5cbjxpbnB1dCBiaW5kOnZhbHVlPXtwYXNzd29yZH0gcGxhY2Vob2xkZXI9XCJlbnRlciB5b3VyIHBhc3N3b3JkXCI+XG5cbjxidXR0b24gb246Y2xpY2t8b25jZT17aGFuZGxlQ2xpY2t9PlxuXHRTaWduIEluXG48L2J1dHRvbj5cbiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozt3Q0FpQm1CLEdBQVE7Ozt3Q0FDUixHQUFROzs7Ozs7Ozs7aUNBRUosV0FBVzs7Ozs7OzsrREFIZixHQUFRO3lDQUFSLEdBQVE7OzsrREFDUixHQUFRO3lDQUFSLEdBQVE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztTQWJqQixXQUFXO0NBQ25CLEtBQUssQ0FBQyxnQkFBZ0I7Ozs7OztLQUpsQixRQUFRLEdBQUcsRUFBRTtLQUNiLFFBQVEsR0FBRyxFQUFFOzs7Ozs7OztFQWNBLFFBQVE7Ozs7O0VBQ1IsUUFBUTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
